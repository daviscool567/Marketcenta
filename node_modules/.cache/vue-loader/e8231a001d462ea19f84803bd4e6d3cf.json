{"remainingRequest":"C:\\xampp\\htdocs\\maeketcentamobile\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\xampp\\htdocs\\maeketcentamobile\\src\\components\\AccountComponents\\ChangePassword.vue?vue&type=style&index=0&id=57b4a88c&scoped=true&lang=css","dependencies":[{"path":"C:\\xampp\\htdocs\\maeketcentamobile\\src\\components\\AccountComponents\\ChangePassword.vue","mtime":1642109949952},{"path":"C:\\xampp\\htdocs\\maeketcentamobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\maeketcentamobile\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\maeketcentamobile\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\maeketcentamobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\maeketcentamobile\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoub3JkZXItYnRuIHsNCiAgICBwYWRkaW5nOiAzMHB4IDEwcHggMTBweDsNCn0NCi5lcnJvci1wIHsNCiAgICBtYXJnaW46IDJweCAxNXB4ICFpbXBvcnRhbnQ7DQogICAgZm9udC1zaXplOiAxMnB4Ow0KfQ0K"},{"version":3,"sources":["C:\\xampp\\htdocs\\maeketcentamobile\\src\\components\\AccountComponents\\ChangePassword.vue"],"names":[],"mappings":";AAmIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnB","file":"C:/xampp/htdocs/maeketcentamobile/src/components/AccountComponents/ChangePassword.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div>\r\n        <ion-header>\r\n            <ion-toolbar>\r\n                <ion-title>{{ title }}</ion-title>\r\n                <ion-buttons slot=\"end\">\r\n                    <ion-button color=\"dark\" @click=\"dismissModal\">\r\n                        <ion-icon slot=\"icon-only\" :icon=\"closeOutline\"></ion-icon>\r\n                    </ion-button>\r\n                </ion-buttons>\r\n            </ion-toolbar>\r\n        </ion-header>\r\n        <form @submit.prevent=\"updatePassword\" class=\" mt-4\">\r\n            <div class=\"alert alert-danger\" v-if=\"errorMsg\" style=\"margin-left: 10px; margin-right: 10px\">\r\n                <p style=\"margin-bottom: 0 !important; margin-top: 0 !important\" v-for=\"(msg, i) in errorMsg\" :key=\"i\">\r\n                {{ msg.message }}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <ion-item>\r\n                    <ion-label position=\"floating\">Old Password</ion-label>\r\n                    <ion-input type=\"password\" v-model=\"form.oldpassword\" required></ion-input>\r\n                </ion-item>\r\n                <ion-item class=\"mt-3\">\r\n                    <ion-label position=\"floating\">New Password</ion-label>\r\n                    <ion-input type=\"password\" v-model=\"form.password\" @change=\"checkConfirm\" required></ion-input>\r\n                </ion-item>\r\n                <ion-item class=\"mt-3\">\r\n                    <ion-label position=\"floating\">Confirm New Password</ion-label>\r\n                    <ion-input type=\"password\" v-model=\"form.confirm\" @change=\"checkConfirm\"></ion-input>\r\n                </ion-item>\r\n                <p v-if=\"confirmError\" class=\"text-danger error-p\">{{confirmError}}</p>\r\n            </div>\r\n            <div class=\"order-btn\">\r\n                <ion-button\r\n                    class=\"mb-3\"\r\n                    color=\"primary\"\r\n                    expand=\"block\"\r\n                    type=\"submit\"\r\n                >\r\n                    CHANGE\r\n                </ion-button>\r\n                <ion-button type=\"button\" style=\"margin-top: 15px\" color=\"light\" @click=\"dismissModal\" expand=\"block\">\r\n                    CANCEL\r\n                </ion-button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport  { IonInput, IonItem, IonHeader, IonToolbar, IonTitle, \r\nIonLabel, IonButton, IonButtons } from '@ionic/vue'\r\nimport { closeOutline } from 'ionicons/icons';\r\nimport { modalController } from \"@ionic/vue\";\r\nimport { mapActions } from \"vuex\";\r\nimport axios from \"axios\";\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        title: String,\r\n        userData: Object,\r\n        authToken: String,\r\n    },\r\n    components: {\r\n        IonInput,\r\n        IonItem,\r\n        IonHeader,\r\n        IonToolbar,\r\n        IonTitle,\r\n        IonLabel,\r\n        IonButton,\r\n        IonButtons\r\n    },\r\n    data() {\r\n        return {\r\n            closeOutline,\r\n            form: {\r\n                oldpassword: \"\",\r\n                password: \"\",\r\n                confirm: \"\",\r\n                id: this.userData.id,\r\n            },\r\n            confirmError: \"\",\r\n            errorMsg: \"\",\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions([\"showUser\"]),\r\n        updatePassword() {\r\n            if (this.confirmError == \"\") {\r\n                this.presentLoading('Updating');\r\n                axios\r\n                .post(this.dynamic_auth_route(\"user/password/change\"), this.form, {\r\n                    headers: {\r\n                    authorization: `Bearer ${this.authToken}`,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    if (res.status == 280) {\r\n                        this.errorMsg = res.data;\r\n                    } else {\r\n                        this.openToast(res.data.message, 'success');\r\n                        this.dismissModal();\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.openToast(\"An error occured. Please, try again.\", 'danger');\r\n                    this.tokenExpired(error);\r\n                })\r\n                .finally(() => {\r\n                    this.dismissLoading();\r\n                });\r\n            }\r\n        },\r\n        checkConfirm() {\r\n            this.confirmError = \"\";\r\n            if (this.form.confirm != \"\" && this.form.password != \"\") {\r\n                if (this.form.confirm != this.form.password) {\r\n                this.confirmError = \"Passwords do not match\";\r\n                }\r\n            }\r\n        },\r\n        async dismissModal() {\r\n            await modalController.dismiss();\r\n        }\r\n        \r\n    }\r\n})\r\n</script>\r\n<style scoped>\r\n.order-btn {\r\n    padding: 30px 10px 10px;\r\n}\r\n.error-p {\r\n    margin: 2px 15px !important;\r\n    font-size: 12px;\r\n}\r\n</style>\r\n"]}]}